/**
 * @author daron1337 / http://daron1337.github.io/
 * @author fmaerten  / https://github.com/xaliphostes
 */

import { Color } from "three"

/**
 * @category Lookup Table 
 */
export class Lut {
    private map: any = []
    private lut: Array<Color> = []
    private n = 256
    private minV = 0
    private maxV = 1

    constructor(colormap: string, numberofcolors: number) {
        this.setColorMap(colormap, numberofcolors)
    }

    set(value: any) {
        if (value instanceof Lut) {
            this.copy(value)
        }
        return this
    }

    setMin(min: number) {
        this.minV = min
        return this
    }

    setMax(max: number) {
        this.maxV = max
        return this
    }

    setColorMap(colormap: any, numberofcolors: any) {
        this.map = ColorMapKeywords[ colormap ] || ColorMapKeywords.Rainbow
        this.n = numberofcolors || 32
        let step = 1.0 / this.n

        this.lut.length = 0

        for (let i = 0; i <= 1; i += step) {
            for (let j = 0; j < this.map.length - 1; j++) {
                if (i >= this.map[ j ][ 0 ] && i < this.map[ j + 1 ][ 0 ]) {
                let min = this.map[ j ][ 0 ]
                let max = this.map[ j + 1 ][ 0 ]
                let minColor = new Color(this.map[ j ][ 1 ])
                let maxColor = new Color(this.map[ j + 1 ][ 1 ])
                let color = minColor.lerp(maxColor, (i - min) / (max - min))
                this.lut.push(color)
                }
            }
        }

        return this
    }

    copy(lut: any) {
        this.lut = lut.lut
        this.map = lut.map
        this.n = lut.n
        this.minV = lut.minV
        this.maxV = lut.maxV
        return this
    }

    getColor(alpha: number) {
        if (alpha <= this.minV) {
            alpha = this.minV
        } else if (alpha >= this.maxV) {
            alpha = this.maxV
        }

        alpha = (alpha - this.minV) / (this.maxV - this.minV)
        let colorPosition = Math.round(alpha * this.n)

        if (colorPosition === this.n) colorPosition -= 1

        return this.lut[ colorPosition ]
    }

    addColorMap(colormapName: string, arrayOfColors: number) {
        ColorMapKeywords[ colormapName ] = arrayOfColors
    }

    createCanvas() {
        const canvas = document.createElement('canvas')
        canvas.width = 1
        canvas.height = this.n
        this.updateCanvas(canvas)
        return canvas
    }

    updateCanvas(canvas: any) {
        let ctx = canvas.getContext('2d', { alpha: false })
        let imageData = ctx.getImageData(0, 0, 1, this.n)
        let data = imageData.data
        let k = 0
        let step = 1.0 / this.n
        for (let i = 1; i >= 0; i -= step) {
            for (let j = this.map.length - 1; j >= 0; j--) {
                if (i < this.map[ j ][ 0 ] && i >= this.map[ j - 1 ][ 0 ]) {
                    let min = this.map[ j - 1 ][ 0 ]
                    let max = this.map[ j ][ 0 ]
                    let minColor = new Color(this.map[ j - 1 ][ 1 ])
                    let maxColor = new Color(this.map[ j ][ 1 ])
                    let color = minColor.lerp(maxColor, (i - min) / (max - min))
                    data[ k * 4 ] = Math.round(color.r * 255)
                    data[ k * 4 + 1 ] = Math.round(color.g * 255)
                    data[ k * 4 + 2 ] = Math.round(color.b * 255)
                    data[ k * 4 + 3 ] = 255
                    k += 1
                }
            }
        }
        ctx.putImageData(imageData, 0, 0)
        return canvas
    }
}
 
let ColorMapKeywords = {
     'Cooltowarm': [
         [ 0.0, 0x3C4EC2 ], [ 0.2, 0x9BBCFF ], [ 0.5, 0xDCDCDC ], [ 0.8, 0xF6A385 ], [ 1.0, 0xB40426 ]
     ],
 
     'Blackbody': [
         [ 0.0, 0x000000 ], [ 0.2, 0x780000 ], [ 0.5, 0xE63200 ], [ 0.8, 0xFFFF00 ], [ 1.0, 0xFFFFFF ]
     ],
 
     'Grayscale': [
         [ 0.0, 0x000000 ], [ 0.2, 0x404040 ], [ 0.5, 0x7F7F80 ], [ 0.8, 0xBFBFBF ], [ 1.0, 0xFFFFFF ]
     ],
 
     'White_Black': [
         [0.0, 0xffffff],
         [1.0, 0x000000]
     ],
 
     'Black_White_Black': [
         [0.0, 0x000000],
         [0.5, 0xffffff],
         [1.0, 0x000000]
     ],
 
     'Insar': [
         [0.0, 0x0500d5],
         [0.3, 0x00baff],
         [0.5, 0x00ffc6],
         [0.7, 0xfcff00],
         [1.0, 0xd00000]
     ],
 
     'Rainbow': [
         [0.0, 0xff0000],
         [0.2, 0xfffc00],
         [0.4, 0x00ff06],
         [0.6, 0x00fffc],
         [0.8, 0x0600ff],
         [1.0, 0xf600ff]
     ],
 
     'Igeoss': [
         [0.00, 0x004211],
         [0.25, 0xfffc00],
         [0.50, 0xffb400],
         [0.75, 0xff5a00],
         [1.00, 0x870000]
     ],
 
     'Blue_White_Red': [
         [0.0, 0x0012ff],
         [0.5, 0xffffff],
         [1.0, 0xff0000]
     ],
 
     'Blue_Green_Red': [
         [0.0 , 0x0012ff],
         [0.25, 0xffffff],
         [0.5 , 0x00ff00],
         [0.275, 0xffffff],
         [1.0 , 0xff0000]
     ],
 
     'Spectrum': [
         [0.0000, 0xffffff],
         [0.1428, 0xff0000],
         [0.2856, 0xff00fc],
         [0.4284, 0x0600ff],
         [0.5712, 0x00f6ff],
         [0.7140, 0x00ff06],
         [0.8568, 0xfffc00],
         [1.0000, 0xff0000]
     ],
 
     'Default': [
         [0.00, 0x0c00ff],
         [0.25, 0x00fcff],
         [0.50, 0x00ff0c],
         [0.75, 0xf6ff00],
         [1.00, 0xff0000]
     ],
 
     'Banded': [
         [0.0000, 0xfff5cd],
         [0.1666, 0xff9600],
         [0.1667, 0xceffd1],
         [0.3333, 0x107100],
         [0.3334, 0xd4e4fb],
         [0.5000, 0x015faf],
         [0.5001, 0xebdefb],
         [0.6666, 0xc5029e],
         [0.6667, 0xfff0cb],
         [0.8333, 0x845d00],
         [0.8334, 0xf9d8d8],
         [1.0000, 0xda0000]
     ],
 
     'Tab20c': [[0, 0x3582bc],
         [0.01694915254237288, 0x6aaed7],
         [0.03389830508474576, 0x9dcade],
         [0.05084745762711865, 0xc3dbed],
         [0.06779661016949153, 0xe6540f],
         [0.0847457627118644, 0xfe8d3d],
         [0.1016949152542373, 0xfdae69],
         [0.11864406779661017, 0xffcf9f],
         [0.13559322033898305, 0x2ba451],
         [0.15254237288135594, 0x71c572],
         [0.1694915254237288, 0x9ed99d],
         [0.1864406779661017, 0xc7e9be],
         [0.2033898305084746, 0x716cb4],
         [0.22033898305084745, 0x9b9bcb],
         [0.23728813559322035, 0xbabdda],
         [0.2542372881355932, 0xddd9eb],
         [0.2711864406779661, 0x626461],
         [0.288135593220339, 0x949693],
         [0.3050847457627119, 0xbbbdba],
         [0.3220338983050847, 0xd8dad6],
         [0.3389830508474576, 0x3582bc],
         [0.3559322033898305, 0x6aaed7],
         [0.3728813559322034, 0x9dcade],
         [0.3898305084745763, 0xc3dbed],
         [0.4067796610169492, 0xe6540f],
         [0.423728813559322, 0xfe8d3d],
         [0.4406779661016949, 0xfdae69],
         [0.4576271186440678, 0xffcf9f],
         [0.4745762711864407, 0x2ba451],
         [0.4915254237288136, 0x71c572],
         [0.5084745762711864, 0x9ed99d],
         [0.5254237288135594, 0xc7e9be],
         [0.5423728813559322, 0x716cb4],
         [0.559322033898305, 0x9b9bcb],
         [0.576271186440678, 0xbabdda],
         [0.5932203389830508, 0xddd9eb],
         [0.6101694915254238, 0x626461],
         [0.6271186440677966, 0x949693],
         [0.6440677966101694, 0xbbbdba],
         [0.6610169491525424, 0xd8dad6],
         [0.6779661016949152, 0x3582bc],
         [0.6949152542372882, 0x6aaed7],
         [0.711864406779661, 0x9dcade],
         [0.7288135593220338, 0xc3dbed],
         [0.7457627118644068, 0xe6540f],
         [0.7627118644067796, 0xfe8d3d],
         [0.7796610169491526, 0xfdae69],
         [0.7966101694915254, 0xffcf9f],
         [0.8135593220338984, 0x2ba451],
         [0.8305084745762712, 0x71c572],
         [0.847457627118644, 0x9ed99d],
         [0.864406779661017, 0xc7e9be],
         [0.8813559322033898, 0x716cb4],
         [0.8983050847457628, 0x9b9bcb],
         [0.9152542372881356, 0xbabdda],
         [0.9322033898305084, 0xddd9eb],
         [0.9491525423728814, 0x626461],
         [0.9661016949152542, 0x949693],
         [0.9830508474576272, 0xbbbdba],
         [1, 0xd8dad6]
     ],
 
     'Banded10': [[0, 0x3C4EC2],
         [0.02040816326530612, 0x9BBCFF],
         [0.04081632653061224, 0xDCDCDC],
         [0.061224489795918366, 0xF6A385],
         [0.08163265306122448, 0xB40426],
         [0.10204081632653061, 0x3C4EC2],
         [0.12244897959183673, 0x9BBCFF],
         [0.14285714285714285, 0xDCDCDC],
         [0.16326530612244897, 0xF6A385],
         [0.1836734693877551, 0xB40426],
         [0.20408163265306123, 0x3C4EC2],
         [0.22448979591836735, 0x9BBCFF],
         [0.24489795918367346, 0xDCDCDC],
         [0.2653061224489796, 0xF6A385],
         [0.2857142857142857, 0xB40426],
         [0.30612244897959184, 0x3C4EC2],
         [0.32653061224489793, 0x9BBCFF],
         [0.3469387755102041, 0xDCDCDC],
         [0.3673469387755102, 0xF6A385],
         [0.3877551020408163, 0xB40426],
         [0.40816326530612246, 0x3C4EC2],
         [0.42857142857142855, 0x9BBCFF],
         [0.4489795918367347, 0xDCDCDC],
         [0.46938775510204084, 0xF6A385],
         [0.4897959183673469, 0xB40426],
         [0.5102040816326531, 0x3C4EC2],
         [0.5306122448979592, 0x9BBCFF],
         [0.5510204081632653, 0xDCDCDC],
         [0.5714285714285714, 0xF6A385],
         [0.5918367346938775, 0xB40426],
         [0.6122448979591837, 0x3C4EC2],
         [0.6326530612244898, 0x9BBCFF],
         [0.6530612244897959, 0xDCDCDC],
         [0.673469387755102, 0xF6A385],
         [0.6938775510204082, 0xB40426],
         [0.7142857142857143, 0x3C4EC2],
         [0.7346938775510204, 0x9BBCFF],
         [0.7551020408163265, 0xDCDCDC],
         [0.7755102040816326, 0xF6A385],
         [0.7959183673469388, 0xB40426],
         [0.8163265306122449, 0x3C4EC2],
         [0.8367346938775511, 0x9BBCFF],
         [0.8571428571428571, 0xDCDCDC],
         [0.8775510204081632, 0xF6A385],
         [0.8979591836734694, 0xB40426],
         [0.9183673469387755, 0x3C4EC2],
         [0.9387755102040817, 0x9BBCFF],
         [0.9591836734693877, 0xDCDCDC],
         [0.9795918367346939, 0xF6A385],
         [1, 0xB40426]],
     'Banded3': [
         [0, 0x3C4EC2],
         [0.07142857142857142, 0x9BBCFF],
         [0.14285714285714285, 0xDCDCDC],
         [0.21428571428571427, 0xF6A385],
         [0.2857142857142857, 0xB40426],
         [0.35714285714285715, 0x3C4EC2],
         [0.42857142857142855, 0x9BBCFF],
         [0.5, 0xDCDCDC],
         [0.5714285714285714, 0xF6A385],
         [0.6428571428571429, 0xB40426],
         [0.7142857142857143, 0x3C4EC2],
         [0.7857142857142857, 0x9BBCFF],
         [0.8571428571428571, 0xDCDCDC],
         [0.9285714285714286, 0xF6A385],
         [1, 0xB40426]],
     'Banded4': [
         [0, 0x3C4EC2],
         [0.05263157894736842, 0x9BBCFF],
         [0.10526315789473684, 0xDCDCDC],
         [0.15789473684210525, 0xF6A385],
         [0.21052631578947367, 0xB40426],
         [0.2631578947368421, 0x3C4EC2],
         [0.3157894736842105, 0x9BBCFF],
         [0.3684210526315789, 0xDCDCDC],
         [0.42105263157894735, 0xF6A385],
         [0.47368421052631576, 0xB40426],
         [0.5263157894736842, 0x3C4EC2],
         [0.5789473684210527, 0x9BBCFF],
         [0.631578947368421, 0xDCDCDC],
         [0.6842105263157895, 0xF6A385],
         [0.7368421052631579, 0xB40426],
         [0.7894736842105263, 0x3C4EC2],
         [0.8421052631578947, 0x9BBCFF],
         [0.8947368421052632, 0xDCDCDC],
         [0.9473684210526315, 0xF6A385],
         [1, 0xB40426]],
     'Banded5': [
         [0, 0x3C4EC2],
         [0.041666666666666664, 0x9BBCFF],
         [0.08333333333333333, 0xDCDCDC],
         [0.125, 0xF6A385],
         [0.16666666666666666, 0xB40426],
         [0.20833333333333334, 0x3C4EC2],
         [0.25, 0x9BBCFF],
         [0.2916666666666667, 0xDCDCDC],
         [0.3333333333333333, 0xF6A385],
         [0.375, 0xB40426],
         [0.4166666666666667, 0x3C4EC2],
         [0.4583333333333333, 0x9BBCFF],
         [0.5, 0xDCDCDC],
         [0.5416666666666666, 0xF6A385],
         [0.5833333333333334, 0xB40426],
         [0.625, 0x3C4EC2],
         [0.6666666666666666, 0x9BBCFF],
         [0.7083333333333334, 0xDCDCDC],
         [0.75, 0xF6A385],
         [0.7916666666666666, 0xB40426],
         [0.8333333333333334, 0x3C4EC2],
         [0.875, 0x9BBCFF],
         [0.9166666666666666, 0xDCDCDC],
         [0.9583333333333334, 0xF6A385],
         [1, 0xB40426]],
     'Banded6': [
         [0, 0x3C4EC2],
         [0.034482758620689655, 0x9BBCFF],
         [0.06896551724137931, 0xDCDCDC],
         [0.10344827586206896, 0xF6A385],
         [0.13793103448275862, 0xB40426],
         [0.1724137931034483, 0x3C4EC2],
         [0.20689655172413793, 0x9BBCFF],
         [0.2413793103448276, 0xDCDCDC],
         [0.27586206896551724, 0xF6A385],
         [0.3103448275862069, 0xB40426],
         [0.3448275862068966, 0x3C4EC2],
         [0.3793103448275862, 0x9BBCFF],
         [0.41379310344827586, 0xDCDCDC],
         [0.4482758620689655, 0xF6A385],
         [0.4827586206896552, 0xB40426],
         [0.5172413793103449, 0x3C4EC2],
         [0.5517241379310345, 0x9BBCFF],
         [0.5862068965517241, 0xDCDCDC],
         [0.6206896551724138, 0xF6A385],
         [0.6551724137931034, 0xB40426],
         [0.6896551724137931, 0x3C4EC2],
         [0.7241379310344828, 0x9BBCFF],
         [0.7586206896551724, 0xDCDCDC],
         [0.7931034482758621, 0xF6A385],
         [0.8275862068965517, 0xB40426],
         [0.8620689655172413, 0x3C4EC2],
         [0.896551724137931, 0x9BBCFF],
         [0.9310344827586207, 0xDCDCDC],
         [0.9655172413793104, 0xF6A385],
         [1, 0xB40426]],
     'Tab20b': [[0, 0x3A3A7B],
         [0.01694915254237288, 0x5354A4],
         [0.03389830508474576, 0x6D6ECE],
         [0.05084745762711865, 0x999EE0],
         [0.06779661016949153, 0x647937],
         [0.0847457627118644, 0x8BA350],
         [0.1016949152542373, 0xB3CF6B],
         [0.11864406779661017, 0xCCDC9B],
         [0.13559322033898305, 0x8B6D32],
         [0.15254237288135594, 0xBF9E37],
         [0.1694915254237288, 0xE6BA4E],
         [0.1864406779661017, 0xE6CB95],
         [0.2033898305084746, 0x853C38],
         [0.22033898305084745, 0xAF4749],
         [0.23728813559322035, 0xD85F6B],
         [0.2542372881355932, 0xE79699],
         [0.2711864406779661, 0x7D4073],
         [0.288135593220339, 0xA45294],
         [0.3050847457627119, 0xCE6DBB],
         [0.3220338983050847, 0xE19DD4],
         [0.3389830508474576, 0x3A3A7B],
         [0.3559322033898305, 0x5354A4],
         [0.3728813559322034, 0x6D6ECE],
         [0.3898305084745763, 0x999EE0],
         [0.4067796610169492, 0x647937],
         [0.423728813559322, 0x8BA350],
         [0.4406779661016949, 0xB3CF6B],
         [0.4576271186440678, 0xCCDC9B],
         [0.4745762711864407, 0x8B6D32],
         [0.4915254237288136, 0xBF9E37],
         [0.5084745762711864, 0xE6BA4E],
         [0.5254237288135594, 0xE6CB95],
         [0.5423728813559322, 0x853C38],
         [0.559322033898305, 0xAF4749],
         [0.576271186440678, 0xD85F6B],
         [0.5932203389830508, 0xE79699],
         [0.6101694915254238, 0x7D4073],
         [0.6271186440677966, 0xA45294],
         [0.6440677966101694, 0xCE6DBB],
         [0.6610169491525424, 0xE19DD4],
         [0.6779661016949152, 0x3A3A7B],
         [0.6949152542372882, 0x5354A4],
         [0.711864406779661, 0x6D6ECE],
         [0.7288135593220338, 0x999EE0],
         [0.7457627118644068, 0x647937],
         [0.7627118644067796, 0x8BA350],
         [0.7796610169491526, 0xB3CF6B],
         [0.7966101694915254, 0xCCDC9B],
         [0.8135593220338984, 0x8B6D32],
         [0.8305084745762712, 0xBF9E37],
         [0.847457627118644, 0xE6BA4E],
         [0.864406779661017, 0xE6CB95],
         [0.8813559322033898, 0x853C38],
         [0.8983050847457628, 0xAF4749],
         [0.9152542372881356, 0xD85F6B],
         [0.9322033898305084, 0xE79699],
         [0.9491525423728814, 0x7D4073],
         [0.9661016949152542, 0xA45294],
         [0.9830508474576272, 0xCE6DBB],
         [1, 0xE19DD4]
     ]
}
 
const lutTables = [
    'Cooltowarm',
    'Blackbody',
    'Grayscale',
    'White_Black',
    'Black_White_Black',
    'Blue_Green_Red',
    'Insar',
    'Rainbow',
    'Igeoss',
    'Blue_White_Red',
    'Spectrum',
    'Default',
    'Banded',
    'Banded10',
    'Banded3',
    'Banded4',
    'Banded5',
    'Banded6',
    'Tab20b',
    'Tab20c'
]
 